geom_text(data=efit2,aes(x=efit2[,1]/2.5,y=efit2[,3]/2.5+0.02,label=row.names(efit2)),
size=4,color="blue",fontface="bold",alpha=0.5)+
theme(panel.background = element_rect(fill = "white", colour = "black", size = 0.5), # opcoes graficas
panel.grid.major = element_line(colour = NA),
panel.grid.minor = element_line(colour = NA),
axis.text = element_text(colour = "black", size = 14),
axis.title = element_text(colour = "black", size = 16, face = "bold"),
legend.title = element_blank(),
legend.background = element_rect(fill = "white"),
legend.text = element_text(face = "bold", colour = "black", size = 12))
fig3<-ggplot()+
geom_text(mapping=aes(x=scores[,2],y=scores[,3],label=rownames(scores)),size=5)+
xlab("PC2 (26.87%)")+xlim(c(min(scores[,2])-0.08,max(scores[,2])+0.08))+
ylab("PC3 (19.95%)")+ylim(c(min(scores[,3])-0.08,max(scores[,3])+0.08))+
geom_segment(data=efit2,aes(x=0,xend=efit2[,2]/2.5,y=0,yend=efit2[,3]/2.5),
arrow = arrow(length = unit(0.5, "cm")),colour="blue",
size=0.8,alpha=0.2,inherit.aes=FALSE)+
geom_text(data=efit2,aes(x=efit2[,2]/2.5+0.015,y=efit2[,3]/2.5+0.015,label=row.names(efit2)),
size=4,color="blue",fontface="bold",alpha=0.5)+
theme(panel.background = element_rect(fill = "white", colour = "black", size = 0.5), # opcoes graficas
panel.grid.major = element_line(colour = NA),
panel.grid.minor = element_line(colour = NA),
axis.text = element_text(colour = "black", size = 14),
axis.title = element_text(colour = "black", size = 16, face = "bold"),
legend.title = element_blank(),
legend.background = element_rect(fill = "white"),
legend.text = element_text(face = "bold", colour = "black", size = 12))
sfig1<-grid.arrange(fig1,fig2,fig3,nrow=2)
sfig1
ggsave("Figures/Supplfig1.png",sfig1,dpi=600,height=18,width=20,units=c("cm"))
dev.off()
# Opening libraries #
library(cluster)
library(vegan)
library(ggplot2)
library(gridExtra)
# Importing the dataset #
eco<-read.table("data/ecomorphological data.txt",header=T,row.names=1)
# Generating the PCoA #
pcoa<-cmdscale(daisy(eco,metric="gower"),k=ncol(eco)-1,eig=TRUE,add=TRUE)
scores<-as.data.frame(pcoa$points)
# Computing % of explanation of each axis #
(eigenvals(pcoa)/sum(eigenvals(pcoa)))*100
# Fitting ecomorphological indices to ordination #
efit<-envfit(pcoa,eco, permutations = 999, na.rm = TRUE,choices=c(1:3))
efit2<-as.data.frame(efit$vectors$arrows*sqrt(efit$vectors$r))
efit2<-rbind(efit2,efit$factors$centroids*sqrt(efit$factors$r))
efit
# Plotting Supplementary Figure 1 #
fig1<-ggplot()+
geom_text(mapping=aes(x=scores[,1],y=scores[,2],label=rownames(scores)),size=5)+
xlab("PC1 (33.21%)")+xlim(c(min(scores[,1])-0.08,max(scores[,1])+0.08))+
ylab("PC2 (26.87%)")+ylim(c(min(scores[,2])-0.08,max(scores[,2])+0.08))+
geom_segment(data=efit2,aes(x=0,xend=efit2[,1]/2.5,y=0,yend=efit2[,2]/2.5),
arrow = arrow(length = unit(0.5, "cm")),colour="blue",
size=0.8,alpha=0.2,inherit.aes=FALSE)+
geom_text(data=efit2,aes(x=(efit2[,1]/2.5),y=(efit2[,2]/2.5+0.015),label=row.names(efit2)),
size=4,color="blue",fontface="bold",alpha=0.5)+
theme(panel.background = element_rect(fill = "white", colour = "black", size = 0.5), # opcoes graficas
panel.grid.major = element_line(colour = NA),
panel.grid.minor = element_line(colour = NA),
axis.text = element_text(colour = "black", size = 14),
axis.title = element_text(colour = "black", size = 16, face = "bold"),
legend.title = element_blank(),
legend.background = element_rect(fill = "white"),
legend.text = element_text(face = "bold", colour = "black", size = 12))
fig2<-ggplot()+
geom_text(mapping=aes(x=scores[,1],y=scores[,3],label=rownames(scores)),size=5)+
xlab("PC1 (33.21%)")+xlim(c(min(scores[,1])-0.08,max(scores[,1])+0.08))+
ylab("PC3 (19.95%)")+ylim(c(min(scores[,3])-0.08,max(scores[,3])+0.08))+
geom_segment(data=efit2,aes(x=0,xend=efit2[,1]/2.5,y=0,yend=efit2[,3]/2.5),
arrow = arrow(length = unit(0.5, "cm")),colour="blue",
size=0.8,alpha=0.2,inherit.aes=FALSE)+
geom_text(data=efit2,aes(x=efit2[,1]/2.5,y=efit2[,3]/2.5+0.02,label=row.names(efit2)),
size=4,color="blue",fontface="bold",alpha=0.5)+
theme(panel.background = element_rect(fill = "white", colour = "black", size = 0.5), # opcoes graficas
panel.grid.major = element_line(colour = NA),
panel.grid.minor = element_line(colour = NA),
axis.text = element_text(colour = "black", size = 14),
axis.title = element_text(colour = "black", size = 16, face = "bold"),
legend.title = element_blank(),
legend.background = element_rect(fill = "white"),
legend.text = element_text(face = "bold", colour = "black", size = 12))
fig3<-ggplot()+
geom_text(mapping=aes(x=scores[,2],y=scores[,3],label=rownames(scores)),size=5)+
xlab("PC2 (26.87%)")+xlim(c(min(scores[,2])-0.08,max(scores[,2])+0.08))+
ylab("PC3 (19.95%)")+ylim(c(min(scores[,3])-0.08,max(scores[,3])+0.08))+
geom_segment(data=efit2,aes(x=0,xend=efit2[,2]/2.5,y=0,yend=efit2[,3]/2.5),
arrow = arrow(length = unit(0.5, "cm")),colour="blue",
size=0.8,alpha=0.2,inherit.aes=FALSE)+
geom_text(data=efit2,aes(x=efit2[,2]/2.5+0.015,y=efit2[,3]/2.5+0.015,label=row.names(efit2)),
size=4,color="blue",fontface="bold",alpha=0.5)+
theme(panel.background = element_rect(fill = "white", colour = "black", size = 0.5), # opcoes graficas
panel.grid.major = element_line(colour = NA),
panel.grid.minor = element_line(colour = NA),
axis.text = element_text(colour = "black", size = 14),
axis.title = element_text(colour = "black", size = 16, face = "bold"),
legend.title = element_blank(),
legend.background = element_rect(fill = "white"),
legend.text = element_text(face = "bold", colour = "black", size = 12))
sfig1<-grid.arrange(fig1,fig2,fig3,nrow=2)
sfig1
ggsave("Figures/Supplfig1.png",sfig1,dpi=600,height=18,width=20,units=c("cm"))
dev.off()
# Opening libraries #
library(cluster)
library(vegan)
library(ggplot2)
library(gridExtra)
# Opening libraries #
library(reshape)
library(funrar)
# Importing and managing the dataset #
data<-read.table("data/trawling data.txt",header=T)
comm<-cast(data[,c(1:3)],trawl~species,value='pres',fun.aggregate=mean)
comm[is.na(comm)]<-0
row.names(comm)<-comm$trawl
comm<-comm[,-1]
eco<-read.table("data/ecomorphological data.txt",header=T,row.names=1)
colnames(comm)<-rownames(eco)
comm<-as.data.frame(comm)
# COmputing average Functional distinctiveness sensu GreniÃ© et al. (2017) per plot #
divfunc<-funrar(as.matrix(comm),as.matrix(daisy(eco,metric="gower"))
,rel_abund=FALSE)
distinct<-data.frame(divfunc$Di)
distinct[is.na(distinct)]<-0
avdist<-as.data.frame(apply(distinct,1,function(x) mean(x)))
colnames(avdist)[1]<-"AvDist"
write.table(avdist,file="results/avDist.txt")
write.table(avdist,file="results/avDist.txt")
write.table(avdist,file="results/avDist.txt")
# Opening libraries #
library(cluster)
library(vegan)
library(ggplot2)
library(gridExtra)
# Importing the dataset #
eco<-read.table("data/ecomorphological data.txt",header=T,row.names=1)
# Generating the PCoA #
pcoa<-cmdscale(daisy(eco,metric="gower"),k=ncol(eco)-1,eig=TRUE,add=TRUE)
scores<-as.data.frame(pcoa$points)
# Computing % of explanation of each axis #
(eigenvals(pcoa)/sum(eigenvals(pcoa)))*100
# Fitting ecomorphological indices to ordination #
efit<-envfit(pcoa,eco, permutations = 999, na.rm = TRUE,choices=c(1:3))
efit2<-as.data.frame(efit$vectors$arrows*sqrt(efit$vectors$r))
efit2<-rbind(efit2,efit$factors$centroids*sqrt(efit$factors$r))
efit
# Plotting Supplementary Figure 1 #
fig1<-ggplot()+
geom_text(mapping=aes(x=scores[,1],y=scores[,2],label=rownames(scores)),size=5)+
xlab("PC1 (33.21%)")+xlim(c(min(scores[,1])-0.08,max(scores[,1])+0.08))+
ylab("PC2 (26.87%)")+ylim(c(min(scores[,2])-0.08,max(scores[,2])+0.08))+
geom_segment(data=efit2,aes(x=0,xend=efit2[,1]/2.5,y=0,yend=efit2[,2]/2.5),
arrow = arrow(length = unit(0.5, "cm")),colour="blue",
size=0.8,alpha=0.2,inherit.aes=FALSE)+
geom_text(data=efit2,aes(x=(efit2[,1]/2.5),y=(efit2[,2]/2.5+0.015),label=row.names(efit2)),
size=4,color="blue",fontface="bold",alpha=0.5)+
theme(panel.background = element_rect(fill = "white", colour = "black", size = 0.5), # opcoes graficas
panel.grid.major = element_line(colour = NA),
panel.grid.minor = element_line(colour = NA),
axis.text = element_text(colour = "black", size = 14),
axis.title = element_text(colour = "black", size = 16, face = "bold"),
legend.title = element_blank(),
legend.background = element_rect(fill = "white"),
legend.text = element_text(face = "bold", colour = "black", size = 12))
fig2<-ggplot()+
geom_text(mapping=aes(x=scores[,1],y=scores[,3],label=rownames(scores)),size=5)+
xlab("PC1 (33.21%)")+xlim(c(min(scores[,1])-0.08,max(scores[,1])+0.08))+
ylab("PC3 (19.95%)")+ylim(c(min(scores[,3])-0.08,max(scores[,3])+0.08))+
geom_segment(data=efit2,aes(x=0,xend=efit2[,1]/2.5,y=0,yend=efit2[,3]/2.5),
arrow = arrow(length = unit(0.5, "cm")),colour="blue",
size=0.8,alpha=0.2,inherit.aes=FALSE)+
geom_text(data=efit2,aes(x=efit2[,1]/2.5,y=efit2[,3]/2.5+0.02,label=row.names(efit2)),
size=4,color="blue",fontface="bold",alpha=0.5)+
theme(panel.background = element_rect(fill = "white", colour = "black", size = 0.5), # opcoes graficas
panel.grid.major = element_line(colour = NA),
panel.grid.minor = element_line(colour = NA),
axis.text = element_text(colour = "black", size = 14),
axis.title = element_text(colour = "black", size = 16, face = "bold"),
legend.title = element_blank(),
legend.background = element_rect(fill = "white"),
legend.text = element_text(face = "bold", colour = "black", size = 12))
fig3<-ggplot()+
geom_text(mapping=aes(x=scores[,2],y=scores[,3],label=rownames(scores)),size=5)+
xlab("PC2 (26.87%)")+xlim(c(min(scores[,2])-0.08,max(scores[,2])+0.08))+
ylab("PC3 (19.95%)")+ylim(c(min(scores[,3])-0.08,max(scores[,3])+0.08))+
geom_segment(data=efit2,aes(x=0,xend=efit2[,2]/2.5,y=0,yend=efit2[,3]/2.5),
arrow = arrow(length = unit(0.5, "cm")),colour="blue",
size=0.8,alpha=0.2,inherit.aes=FALSE)+
geom_text(data=efit2,aes(x=efit2[,2]/2.5+0.015,y=efit2[,3]/2.5+0.015,label=row.names(efit2)),
size=4,color="blue",fontface="bold",alpha=0.5)+
theme(panel.background = element_rect(fill = "white", colour = "black", size = 0.5), # opcoes graficas
panel.grid.major = element_line(colour = NA),
panel.grid.minor = element_line(colour = NA),
axis.text = element_text(colour = "black", size = 14),
axis.title = element_text(colour = "black", size = 16, face = "bold"),
legend.title = element_blank(),
legend.background = element_rect(fill = "white"),
legend.text = element_text(face = "bold", colour = "black", size = 12))
sfig1<-grid.arrange(fig1,fig2,fig3,nrow=2)
sfig1
ggsave("Figures/Supplfig1.png",sfig1,dpi=600,height=18,width=20,units=c("cm"))
dev.off()
# Opening libraries #
library(reshape)
library(funrar)
# Importing and managing the dataset #
data<-read.table("data/trawling data.txt",header=T)
comm<-cast(data[,c(1:3)],trawl~species,value='pres',fun.aggregate=mean)
comm[is.na(comm)]<-0
row.names(comm)<-comm$trawl
comm<-comm[,-1]
eco<-read.table("data/ecomorphological data.txt",header=T,row.names=1)
colnames(comm)<-rownames(eco)
comm<-as.data.frame(comm)
# COmputing average Functional distinctiveness sensu GreniÃ© et al. (2017) per plot #
divfunc<-funrar(as.matrix(comm),as.matrix(daisy(eco,metric="gower"))
,rel_abund=FALSE)
distinct<-data.frame(divfunc$Di)
distinct[is.na(distinct)]<-0
avdist<-as.data.frame(apply(distinct,1,function(x) mean(x)))
colnames(avdist)[1]<-"AvDist"
write.table(avdist,file="results/avDist.txt")
# Opening libraries #
library(cluster)
library(vegan)
library(ggplot2)
library(gridExtra)
# Importing the dataset #
eco<-read.table("data/ecomorphological data.txt",header=T,row.names=1)
# Generating the PCoA #
pcoa<-cmdscale(daisy(eco,metric="gower"),k=ncol(eco)-1,eig=TRUE,add=TRUE)
scores<-as.data.frame(pcoa$points)
# Computing % of explanation of each axis #
(eigenvals(pcoa)/sum(eigenvals(pcoa)))*100
# Fitting ecomorphological indices to ordination #
efit<-envfit(pcoa,eco, permutations = 999, na.rm = TRUE,choices=c(1:3))
efit2<-as.data.frame(efit$vectors$arrows*sqrt(efit$vectors$r))
efit2<-rbind(efit2,efit$factors$centroids*sqrt(efit$factors$r))
efit
# Plotting Supplementary Figure 1 #
fig1<-ggplot()+
geom_text(mapping=aes(x=scores[,1],y=scores[,2],label=rownames(scores)),size=5)+
xlab("PC1 (33.21%)")+xlim(c(min(scores[,1])-0.08,max(scores[,1])+0.08))+
ylab("PC2 (26.87%)")+ylim(c(min(scores[,2])-0.08,max(scores[,2])+0.08))+
geom_segment(data=efit2,aes(x=0,xend=efit2[,1]/2.5,y=0,yend=efit2[,2]/2.5),
arrow = arrow(length = unit(0.5, "cm")),colour="blue",
size=0.8,alpha=0.2,inherit.aes=FALSE)+
geom_text(data=efit2,aes(x=(efit2[,1]/2.5),y=(efit2[,2]/2.5+0.015),label=row.names(efit2)),
size=4,color="blue",fontface="bold",alpha=0.5)+
theme(panel.background = element_rect(fill = "white", colour = "black", size = 0.5), # opcoes graficas
panel.grid.major = element_line(colour = NA),
panel.grid.minor = element_line(colour = NA),
axis.text = element_text(colour = "black", size = 14),
axis.title = element_text(colour = "black", size = 16, face = "bold"),
legend.title = element_blank(),
legend.background = element_rect(fill = "white"),
legend.text = element_text(face = "bold", colour = "black", size = 12))
fig2<-ggplot()+
geom_text(mapping=aes(x=scores[,1],y=scores[,3],label=rownames(scores)),size=5)+
xlab("PC1 (33.21%)")+xlim(c(min(scores[,1])-0.08,max(scores[,1])+0.08))+
ylab("PC3 (19.95%)")+ylim(c(min(scores[,3])-0.08,max(scores[,3])+0.08))+
geom_segment(data=efit2,aes(x=0,xend=efit2[,1]/2.5,y=0,yend=efit2[,3]/2.5),
arrow = arrow(length = unit(0.5, "cm")),colour="blue",
size=0.8,alpha=0.2,inherit.aes=FALSE)+
geom_text(data=efit2,aes(x=efit2[,1]/2.5,y=efit2[,3]/2.5+0.02,label=row.names(efit2)),
size=4,color="blue",fontface="bold",alpha=0.5)+
theme(panel.background = element_rect(fill = "white", colour = "black", size = 0.5), # opcoes graficas
panel.grid.major = element_line(colour = NA),
panel.grid.minor = element_line(colour = NA),
axis.text = element_text(colour = "black", size = 14),
axis.title = element_text(colour = "black", size = 16, face = "bold"),
legend.title = element_blank(),
legend.background = element_rect(fill = "white"),
legend.text = element_text(face = "bold", colour = "black", size = 12))
fig3<-ggplot()+
geom_text(mapping=aes(x=scores[,2],y=scores[,3],label=rownames(scores)),size=5)+
xlab("PC2 (26.87%)")+xlim(c(min(scores[,2])-0.08,max(scores[,2])+0.08))+
ylab("PC3 (19.95%)")+ylim(c(min(scores[,3])-0.08,max(scores[,3])+0.08))+
geom_segment(data=efit2,aes(x=0,xend=efit2[,2]/2.5,y=0,yend=efit2[,3]/2.5),
arrow = arrow(length = unit(0.5, "cm")),colour="blue",
size=0.8,alpha=0.2,inherit.aes=FALSE)+
geom_text(data=efit2,aes(x=efit2[,2]/2.5+0.015,y=efit2[,3]/2.5+0.015,label=row.names(efit2)),
size=4,color="blue",fontface="bold",alpha=0.5)+
theme(panel.background = element_rect(fill = "white", colour = "black", size = 0.5), # opcoes graficas
panel.grid.major = element_line(colour = NA),
panel.grid.minor = element_line(colour = NA),
axis.text = element_text(colour = "black", size = 14),
axis.title = element_text(colour = "black", size = 16, face = "bold"),
legend.title = element_blank(),
legend.background = element_rect(fill = "white"),
legend.text = element_text(face = "bold", colour = "black", size = 12))
sfig1<-grid.arrange(fig1,fig2,fig3,nrow=2)
sfig1
ggsave("Figures/Supplfig1.png",sfig1,dpi=600,height=18,width=20,units=c("cm"))
dev.off()
# Opening libraries #
library(reshape)
library(funrar)
# Importing and managing the dataset #
data<-read.table("data/trawling data.txt",header=T)
comm<-cast(data[,c(1:3)],trawl~species,value='pres',fun.aggregate=mean)
comm[is.na(comm)]<-0
row.names(comm)<-comm$trawl
comm<-comm[,-1]
eco<-read.table("data/ecomorphological data.txt",header=T,row.names=1)
colnames(comm)<-rownames(eco)
comm<-as.data.frame(comm)
# COmputing average Functional distinctiveness sensu GreniÃ© et al. (2017) per plot #
divfunc<-funrar(as.matrix(comm),as.matrix(daisy(eco,metric="gower"))
,rel_abund=FALSE)
distinct<-data.frame(divfunc$Di)
distinct[is.na(distinct)]<-0
avdist<-as.data.frame(apply(distinct,1,function(x) mean(x)))
colnames(avdist)[1]<-"AvDist"
write.table(avdist,file="results/avDist.txt")
# Loading packages #
library(ggplot2)
library(gridExtra)
library(reshape)
library(vegan)
# Importing the dataset #
trawlings<-read.table("data/trawling data.txt",header=T)
# Renaming species for further plotting #
levels(trawlings$species)[1]<-"Aph"
levels(trawlings$species)[2]<-"Aqu"
levels(trawlings$species)[3]<-"Aru"
levels(trawlings$species)[4]<-"Bba"
levels(trawlings$species)[5]<-"Car"
levels(trawlings$species)[6]<-"Ngr"
levels(trawlings$species)[7]<-"Sco"
levels(trawlings$species)[8]<-"Spa"
levels(trawlings$species)[9]<-"Spr"
# Average differences in sites that each species occurred #
anova(lm(log(trawlings$prof)~trawlings$species)) # significant p-value
anova(lm(log(trawlings$sal)~trawlings$species)) # significant p-value
anova(lm(log(trawlings$temp)~trawlings$species)) # non-significant p-value
# Plotting Figure 3 #
Depth<-ggplot()+
geom_boxplot(aes(x=trawlings$species,y=trawlings$prof),
notch=TRUE,fill="grey")+
xlab("Species")+
ylab("Depth (m)")+
scale_y_log10(limits = c(5,60))+
theme(panel.background = element_rect(fill = "white", colour = "black", size = 0.5), # opcoes graficas
panel.grid.major = element_line(colour = NA),
panel.grid.minor = element_line(colour = NA),
axis.text = element_text(colour = "black", size = 10),
axis.text.x = element_blank(),
axis.title.x=element_blank(),
axis.title = element_text(colour = "black", size = 12, face = "bold"),
legend.title = element_blank(),
legend.background = element_rect(fill = "white"),
legend.text = element_text(face = "bold", colour = "black", size = 16))
Salinity<-ggplot()+
geom_boxplot(aes(x=trawlings$species,y=trawlings$sal),
notch=TRUE,fill="grey")+
ylab("Salinity")+
theme(panel.background = element_rect(fill = "white", colour = "black", size = 0.5), # opcoes graficas
panel.grid.major = element_line(colour = NA),
panel.grid.minor = element_line(colour = NA),
axis.text = element_text(colour = "black", size = 10),
axis.text.x = element_blank(),
axis.title.x=element_blank(),
axis.title = element_text(colour = "black", size = 12, face = "bold"),
legend.title = element_blank(),
legend.background = element_rect(fill = "white"),
legend.text = element_text(face = "bold", colour = "black", size = 16))
Temperature<-ggplot()+
geom_boxplot(aes(x=trawlings$species,y=trawlings$temp),
notch=TRUE,fill="grey")+
xlab("Species")+
ylab("Temperature (ÂºC)")+
theme(panel.background = element_rect(fill = "white", colour = "black", size = 0.5), # opcoes graficas
panel.grid.major = element_line(colour = NA),
panel.grid.minor = element_line(colour = NA),
axis.text = element_text(colour = "black", size = 10),
axis.title = element_text(colour = "black", size = 12, face = "bold"),
legend.title = element_blank(),
legend.background = element_rect(fill = "white"),
legend.text = element_text(face = "bold", colour = "black", size = 16))
figure3<-grid.arrange(Depth,Salinity,Temperature,nrow=3)
ggsave("Figures/Figure 3.png",figure3,dpi=600,height=24,width=16,units=c("cm"))
# PCA for environmental variables #
env<-aggregate(trawlings[,7:9],list(trawlings$trawl),mean)
row.names(env)<-env$Group.1
env<-env[,-1]
pc.env<-princomp(decostand(env,method="standardize"),cor=TRUE)
eigenvals(pc.env) #Selecting first axis by Kaiser-Guttman criterion
summary(pc.env) #First axis explains 53.4% of total variation
pc.env$loadings #Depth and salinity are positively related to the first PC
scores<-pc.env$scores
loadings<-as.data.frame(pc.env$loadings[c(1:3),])
write.table(scores,"results/env_pcs.txt")
# Plotting PCA #
Suppl.Fig2<-ggplot()+
geom_point(mapping=aes(x=scores[,1],y=scores[,2]),size=2,alpha=0.15)+
xlab("PC1 (53.41%)")+  ylab("PC2 (32.93%)")+
geom_segment(aes(x=0,xend=loadings[,1]*2,y=0,yend=loadings[,2]*2),
arrow = arrow(length = unit(0.5, "cm")),colour="blue",
size=0.8,alpha=0.5,inherit.aes=FALSE)+
geom_text(aes(x=(loadings[,1]*2+0.3),y=(loadings[,2]*2+0.16),label=c("Depth","Salinity","Temperature")),
size=4,color="blue",fontface="bold",alpha=0.5)+
theme(panel.background = element_rect(fill = "white", colour = "black", size = 0.5), # opcoes graficas
panel.grid.major = element_line(colour = NA),
panel.grid.minor = element_line(colour = NA),
axis.text = element_text(colour = "black", size = 12),
axis.title = element_text(colour = "black", size = 14, face = "bold"),
legend.title = element_blank(),
legend.background = element_rect(fill = "white"),
legend.text = element_text(face = "bold", colour = "black", size = 10))
ggsave("Suppl. Fig. 2.png",Suppl.Fig2,dpi=600,height=10,width=10,units=c("cm"))
# Opening libraries #
library(cluster)
library(vegan)
library(ggplot2)
library(gridExtra)
# Importing the dataset #
eco<-read.table("data/ecomorphological data.txt",header=T,row.names=1)
# Generating the PCoA #
pcoa<-cmdscale(daisy(eco,metric="gower"),k=ncol(eco)-1,eig=TRUE,add=TRUE)
scores<-as.data.frame(pcoa$points)
# Computing % of explanation of each axis #
(eigenvals(pcoa)/sum(eigenvals(pcoa)))*100
# Fitting ecomorphological indices to ordination #
efit<-envfit(pcoa,eco, permutations = 999, na.rm = TRUE,choices=c(1:3))
efit2<-as.data.frame(efit$vectors$arrows*sqrt(efit$vectors$r))
efit2<-rbind(efit2,efit$factors$centroids*sqrt(efit$factors$r))
efit
# Plotting Supplementary Figure 1 #
fig1<-ggplot()+
geom_text(mapping=aes(x=scores[,1],y=scores[,2],label=rownames(scores)),size=5)+
xlab("PC1 (33.21%)")+xlim(c(min(scores[,1])-0.08,max(scores[,1])+0.08))+
ylab("PC2 (26.87%)")+ylim(c(min(scores[,2])-0.08,max(scores[,2])+0.08))+
geom_segment(data=efit2,aes(x=0,xend=efit2[,1]/2.5,y=0,yend=efit2[,2]/2.5),
arrow = arrow(length = unit(0.5, "cm")),colour="blue",
size=0.8,alpha=0.2,inherit.aes=FALSE)+
geom_text(data=efit2,aes(x=(efit2[,1]/2.5),y=(efit2[,2]/2.5+0.015),label=row.names(efit2)),
size=4,color="blue",fontface="bold",alpha=0.5)+
theme(panel.background = element_rect(fill = "white", colour = "black", size = 0.5), # opcoes graficas
panel.grid.major = element_line(colour = NA),
panel.grid.minor = element_line(colour = NA),
axis.text = element_text(colour = "black", size = 14),
axis.title = element_text(colour = "black", size = 16, face = "bold"),
legend.title = element_blank(),
legend.background = element_rect(fill = "white"),
legend.text = element_text(face = "bold", colour = "black", size = 12))
fig2<-ggplot()+
geom_text(mapping=aes(x=scores[,1],y=scores[,3],label=rownames(scores)),size=5)+
xlab("PC1 (33.21%)")+xlim(c(min(scores[,1])-0.08,max(scores[,1])+0.08))+
ylab("PC3 (19.95%)")+ylim(c(min(scores[,3])-0.08,max(scores[,3])+0.08))+
geom_segment(data=efit2,aes(x=0,xend=efit2[,1]/2.5,y=0,yend=efit2[,3]/2.5),
arrow = arrow(length = unit(0.5, "cm")),colour="blue",
size=0.8,alpha=0.2,inherit.aes=FALSE)+
geom_text(data=efit2,aes(x=efit2[,1]/2.5,y=efit2[,3]/2.5+0.02,label=row.names(efit2)),
size=4,color="blue",fontface="bold",alpha=0.5)+
theme(panel.background = element_rect(fill = "white", colour = "black", size = 0.5), # opcoes graficas
panel.grid.major = element_line(colour = NA),
panel.grid.minor = element_line(colour = NA),
axis.text = element_text(colour = "black", size = 14),
axis.title = element_text(colour = "black", size = 16, face = "bold"),
legend.title = element_blank(),
legend.background = element_rect(fill = "white"),
legend.text = element_text(face = "bold", colour = "black", size = 12))
fig3<-ggplot()+
geom_text(mapping=aes(x=scores[,2],y=scores[,3],label=rownames(scores)),size=5)+
xlab("PC2 (26.87%)")+xlim(c(min(scores[,2])-0.08,max(scores[,2])+0.08))+
ylab("PC3 (19.95%)")+ylim(c(min(scores[,3])-0.08,max(scores[,3])+0.08))+
geom_segment(data=efit2,aes(x=0,xend=efit2[,2]/2.5,y=0,yend=efit2[,3]/2.5),
arrow = arrow(length = unit(0.5, "cm")),colour="blue",
size=0.8,alpha=0.2,inherit.aes=FALSE)+
geom_text(data=efit2,aes(x=efit2[,2]/2.5+0.015,y=efit2[,3]/2.5+0.015,label=row.names(efit2)),
size=4,color="blue",fontface="bold",alpha=0.5)+
theme(panel.background = element_rect(fill = "white", colour = "black", size = 0.5), # opcoes graficas
panel.grid.major = element_line(colour = NA),
panel.grid.minor = element_line(colour = NA),
axis.text = element_text(colour = "black", size = 14),
axis.title = element_text(colour = "black", size = 16, face = "bold"),
legend.title = element_blank(),
legend.background = element_rect(fill = "white"),
legend.text = element_text(face = "bold", colour = "black", size = 12))
sfig1<-grid.arrange(fig1,fig2,fig3,nrow=2)
sfig1
ggsave("Figures/Supplfig1.png",sfig1,dpi=600,height=18,width=20,units=c("cm"))
dev.off()
# Importing and managing the dataset #
data<-read.table("data/trawling data.txt",header=T)
comm<-cast(data[,c(1:3)],trawl~species,value='pres',fun.aggregate=mean)
comm[is.na(comm)]<-0
row.names(comm)<-comm$trawl
comm<-comm[,-1]
g libraries #
library(reshape)
library(funrar)
# Importing and managing the dataset #
data<-read.table("data/trawling data.txt",header=T)
comm<-cast(data[,c(1:3)],trawl~species,value='pres',fun.aggregate=mean)
comm[is.na(comm)]<-0
row.names(comm)<-comm$trawl
comm<-comm[,-1]
eco<-read.table("data/ecomorphological data.txt",header=T,row.names=1)
colnames(comm)<-rownames(eco)
comm<-as.data.frame(comm)
# COmputing average Functional distinctiveness sensu GreniÃ© et al. (2017) per plot #
divfunc<-funrar(as.matrix(comm),as.matrix(daisy(eco,metric="gower"))
,rel_abund=FALSE)
distinct<-data.frame(divfunc$Di)
distinct[is.na(distinct)]<-0
avdist<-as.data.frame(apply(distinct,1,function(x) mean(x)))
colnames(avdist)[1]<-"AvDist"
write.table(avdist,file="results/avDist.txt")
